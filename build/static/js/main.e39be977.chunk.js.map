{"version":3,"sources":["BooksAPI.js","Book.js","Search.js","Shelf.js","Main.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","_ref","updateShelf","authors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","author","value","push","err","return","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","target","disabled","title","Search","state","results","handleChange","_callee","regenerator_default","wrap","_context","prev","_this","setState","abrupt","BooksAPI","hasOwnProperty","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","stop","this","props","Link","to","type","placeholder","length","map","src_Book","key","Component","Shelf","section","Main","src_Shelf","filter","BooksApp","response","x","catch","error","console","log","_this2","Switch","Route","exact","path","render","src_Main","src_Search","component","NoResults","loc","pathname","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e39be977.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n      const Book = ({ book, updateShelf }) => {\r\n\r\n        let authors = []\r\n\r\n        if(book.authors){\r\n            for(let author of book.authors) {\r\n            authors.push(`${author} `)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <li>\r\n                <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                     <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${ book.imageLinks ? book.imageLinks.thumbnail : \"\" })` }}></div>\r\n                     <div className=\"book-shelf-changer\">\r\n                     <select value={book.shelf || 'none'} onChange={(e) => {\r\n                         updateShelf(book, e.target.value);\r\n                       }}>\r\n                        <option value=\"move\" disabled>Move to...</option>\r\n                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{ book.title ? book.title : \"\"}</div>\r\n                <div className=\"book-authors\">{ book.authors ? authors : \"\" }</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n    Book.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    updateShelf: PropTypes.func.isRequired }\r\n\r\nexport default Book\r\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\n\r\n\r\nclass Search extends Component {\r\n\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    updateShelf: PropTypes.func.isRequired\r\n  };\r\n\r\n    state = {\r\n      results: [],\r\n      query: '',\r\n      books: []\r\n   }\r\n\r\n   async componentDidMount() {\r\n    const books = await BooksAPI.getAll()\r\n     this.setState( { books } )\r\n   }\r\n\r\n     handleChange = async e => {\r\n       const query = e.target.value\r\n      this.setState( { query } )\r\n\r\n       if (query === '' || query === undefined) {\r\n            return this.setState({\r\n               results: []\r\n             })\r\n           }\r\n      else {\r\n        await BooksAPI.search(query).then(results => {\r\n          if(!results || results.hasOwnProperty('error')) {\r\n            this.setState({ results: [] })\r\n          } else {\r\n              for(let result of results){\r\n                result.shelf = 'none'\r\n                for(let book of this.state.books){\r\n                  if(book.id === result.id){\r\n                    result.shelf = book.shelf\r\n                  }\r\n                }\r\n              }\r\n            this.setState( { results } )\r\n           }\r\n      })\r\n     }\r\n}\r\n\r\n    render() {\r\n\r\n      const { updateShelf } = this.props;\r\n      const { results } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link className=\"close-search\" to='/'>Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n              <input type=\"text\"\r\n                     placeholder=\"Search by title or author\"\r\n                     value={this.state.query}\r\n                     onChange={this.handleChange}\r\n                     />\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n              {results.length > 0 ? results.map(book =>\r\n                <Book\r\n                  book={book}\r\n                  key={book.id}\r\n                  updateShelf={updateShelf}\r\n                />\r\n              ) : \"THERE IS NO RESULTS HERE!\"\r\n            }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\n\r\nconst Shelf = ({books, section, updateShelf}) => {\r\n        return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{section}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {\r\n                    books && books.map((book) => {\r\n                         return (\r\n                              <Book\r\n                                   book={book}\r\n                                   key={book.id}\r\n                                   updateShelf={updateShelf}\r\n                              />\r\n                         )\r\n                    })\r\n               }\r\n                </ol>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    Shelf.propTypes = {\r\n        books: PropTypes.array.isRequired,\r\n        section: PropTypes.string.isRequired,\r\n        updateShelf: PropTypes.func.isRequired }\r\n\r\nexport default Shelf\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Shelf from './Shelf'\r\n\r\nconst Main = ({books, updateShelf}) => {\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <div>\r\n                    <Shelf\r\n                        section=\"Currently Reading\"\r\n                        books={books.filter((book) => book.shelf === 'currentlyReading'\r\n                            )}\r\n                        updateShelf={updateShelf}\r\n                    />\r\n                    <Shelf\r\n                        section=\"Want to Read\"\r\n                        books={books.filter((book) => book.shelf === 'wantToRead'\r\n                            )}\r\n                        updateShelf={updateShelf}\r\n                    />\r\n                    <Shelf\r\n                        section=\"Read\"\r\n                        books={books.filter((book) => book.shelf === 'read'\r\n                            )}\r\n                        updateShelf={updateShelf}\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                <Link to='/search'>Add a book</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    Main.propTypes = {\r\n        books: PropTypes.array.isRequired,\r\n        updateShelf: PropTypes.func.isRequired }\r\n\r\nexport default Main\r\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport Main from './Main'\r\n\r\nclass BooksApp extends Component {\r\n\r\n  state = {\r\n    books: []\r\n}\r\n\r\n    async componentDidMount() {\r\n        const books = await BooksAPI.getAll()\r\n        this.setState( { books } )\r\n    }\r\n    // passing updates for each component\r\n    updateShelf = (book, shelf) => {\r\n       BooksAPI.update(book, shelf)\r\n        .then((response) => {\r\n          book.shelf = shelf;\r\n          this.setState((state) => ({\r\n            books: state.books.filter((x) => {\r\n              return (x.id !== book.id)\r\n            }).concat([book])\r\n          }))\r\n        }).catch(error => {\r\n          console.log(error);\r\n        })\r\n      }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n      <Switch>\r\n      <Route exact path='/' render={() => (\r\n        <Main\r\n          books={this.state.books}\r\n          updateShelf={this.updateShelf}\r\n        />\r\n      )} />\r\n      <Route path='/search' render={() => (\r\n        <Search\r\n        books={this.state.books}\r\n        updateShelf={this.updateShelf}\r\n        />\r\n      )} />\r\n      <Route component={NoResults} />\r\n      </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// error page\r\nconst NoResults = ({ loc }) => (\r\n  <div>\r\n    <h3>There is no matches for <code>{loc.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root'))\r\n"],"sourceRoot":""}